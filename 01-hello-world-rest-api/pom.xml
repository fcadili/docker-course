<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.3.4.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.in28minutes.rest.webservices</groupId>
	<artifactId>hello-world-rest-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>hello-world-rest-api</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>11</java.version>
		<dockerid>fcadili</dockerid>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- create a cacheable layer of library -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>${project.groupId}</groupId>
									<artifactId>${project.artifactId}</artifactId>
									<version>${project.version}</version>
								</artifactItem>
							</artifactItems>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- docker @See https://codefresh.io/howtos/using-docker-maven-maven-docker/ -->
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.34.1</version>
				<executions>
					<execution>
						<id>start</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>build</goal>
							<!-- <goal>start</goal> -->
						</goals>
					</execution>
					<!-- <execution> <id>stop</id> <phase>post-integration-test</phase> 
						<goals> <goal>stop</goal> </goals> </execution> -->
				</executions>
				<configuration>
					<images>
						<image>
							<!-- <name>docker.io/kkapelon/docker-maven-comparison</name> -->
							<name>${dockerid}/${project.name}:${project.version}</name>
							<build>
								<dockerFile>${project.basedir}/Dockerfile</dockerFile>
							</build>
							<!-- <run> <ports> <port>8080:8080</port> </ports> <wait> <url>http://localhost:8080/helth</url> 
								<time>120000</time> </wait> </run> -->
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
